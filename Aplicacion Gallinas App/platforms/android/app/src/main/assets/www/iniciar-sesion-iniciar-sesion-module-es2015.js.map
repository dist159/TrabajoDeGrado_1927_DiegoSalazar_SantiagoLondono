{"version":3,"sources":["./src/app/iniciar-sesion/iniciar-sesion.page.html","./src/app/iniciar-sesion/iniciar-sesion-routing.module.ts","./src/app/iniciar-sesion/iniciar-sesion.module.ts","./src/app/iniciar-sesion/iniciar-sesion.page.scss","./src/app/iniciar-sesion/iniciar-sesion.page.ts"],"names":[],"mappings":"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","file":"iniciar-sesion-iniciar-sesion-module-es2015.js","sourcesContent":["export default \"<ion-content>\\n\\n  <div  class=\\\"ion-text-center\\\" text-center style=\\\"margin-top: 20%;\\\">\\n    <h1 class=\\\"ion-text-center\\\"style=\\\"font-family: 'letra1'\\\">Gallinas App</h1>\\n    <img class=\\\"ion-text-center\\\" text-center style=\\\"margin-top: 10%; width: 200px; \\\" src=\\\"../../assets/imagenes/gallina.png\\\">\\n  </div>\\n  \\n  <form #form=\\\"ngForm\\\" >\\n    <ion-grid>\\n      <ion-row color=\\\"primary\\\" justify-content-center>\\n        <ion-col align-self-center size-md=\\\"6\\\" size-lg=\\\"5\\\" size-xs=\\\"12\\\">\\n          <div class=\\\"ion-text-center\\\">\\n            <h3>Iniciar sesión</h3>\\n          </div>\\n          <div padding>\\n            <ion-item>\\n              <ion-input name=\\\"email\\\" type=\\\"email\\\" placeholder=\\\"Tu correo\\\" ngModel required [(ngModel)]=\\\"account.email\\\" ></ion-input>\\n            </ion-item>\\n            <ion-item>\\n              <ion-input name=\\\"password\\\" type=\\\"password\\\" placeholder=\\\"Contraseña\\\" ngModel required [(ngModel)]=\\\"account.password\\\"></ion-input>\\n            </ion-item>\\n          </div>\\n          <div padding>\\n            <ion-button size=\\\"large\\\" type=\\\"submit\\\" (click)=\\\"iniciarSesion()\\\"[disabled]=\\\"form.invalid\\\" expand=\\\"block\\\">iniciar</ion-button>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </form>\\n  <div text-center>\\n  <ion-row text-center>\\n    <div  style=\\\"margin: auto;\\\"text-center>\\n      Si no tiene una cuenta, registrese  <a routerLink='/crear-ususario'>aca</a>.\\n    </div>\\n</ion-row>\\n</div>\\n\\n  \\n  \\n  </ion-content>\\n  \";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IniciarSesionPage } from './iniciar-sesion.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: IniciarSesionPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class IniciarSesionPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { IniciarSesionPageRoutingModule } from './iniciar-sesion-routing.module';\n\nimport { IniciarSesionPage } from './iniciar-sesion.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    IniciarSesionPageRoutingModule\n  ],\n  declarations: [IniciarSesionPage]\n})\nexport class IniciarSesionPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2luaWNpYXItc2VzaW9uL2luaWNpYXItc2VzaW9uLnBhZ2Uuc2NzcyJ9 */\";","/* iniciar-sesion.page ********************************************************/\n/*                                                                            */\n/*                   Pagina iniciar-sesion (funciones)                        */\n/*                                                                            */\n/******************************************************************************/\n\n/*******************************************************************************\n\n    Notas:           Codigo de las funciones de la pagina iniciar-sesion. Esta \n                     pagina permite iniciar sesion y navegar a otra pagina.\n                    \n\n    Registro de Revisiones:\n\n    FECHA      RESPONSABLE  REVISION\n    -----------------------------------------------------------------------\n    Mar 05/20  S.Londoño    Implementacion original\n\n    Mar 05/20  D.Salazar    Implementacion original\n\n\n*******************************************************************************/\n\nimport { Component, OnInit } from '@angular/core';\nimport { NavController, LoadingController } from '@ionic/angular';\n\nimport { Storage } from '@ionic/storage';\nimport { ServiciosGService, usuario } from '../servicios-g.service';\n\n@Component({\n  selector: 'app-iniciar-sesion',\n  templateUrl: './iniciar-sesion.page.html',\n  styleUrls: ['./iniciar-sesion.page.scss'],\n})\nexport class IniciarSesionPage implements OnInit {\n\n  cargandoA: any;\n  constructor(public navCtrl: NavController,\n    public Servicios: ServiciosGService, public loadingController: LoadingController, private storage: Storage) { }\n\n  /** Variables para leer el correo y la contrasena en el HTML */\n  account: { email: string, password: string } = {\n    email: '',\n    password: ''\n  };\n\n\n  ngOnInit() {\n  }\n\n  /*FN****************************************************************************\n  *\n  *   void iniciarSesion()\n  *\n  *   Retorna:         Nada\n  *\n  *   Proposito:       Dado un cuenta de correo y una contrasena, verifica en los\n  *                    servidores de google si se encuentra registrado y la informacion\n  *                    concuerda. En caso de un resultado positivo, se navegara\n  *                    a la pagina MainMenu. Tambien determinara si el usuario es\n  *                    administrador o usuario normal.\n  *\n  *******************************************************************************/\n  iniciarSesion() {\n    this.presentLoadingA();\n    this.Servicios.userState().subscribe((user: firebase.User) => {\n      this.Servicios.iniciarsesion(this.account.email, this.account.password).then(res => {\n        this.cargandoA.dismiss();\n        this.Servicios.getUsuario(user.uid).subscribe(res => {\n          const UsuarioA = res.payload.val() as usuario;\n          console.log(UsuarioA);\n          if (UsuarioA !== undefined) {\n            this.account.email=\"\";\n            this.account.password=\"\";\n            console.log(UsuarioA.admin)\n            if (UsuarioA.admin == true) {\n              this.navCtrl.navigateRoot('/admin');\n            } else {\n              this.navCtrl.navigateRoot('/mainmenu');\n            }\n          } else {\n            console.log(\"Error al iniciar\")\n          }\n        });\n        this.storage.set('log', 'si');\n      }).catch(err => {\n        this.cargandoA.dismiss();\n        console.log(\"Error al iniciar\")\n      });\n    });\n  }\n\n\n\n\n  /*FN****************************************************************************\n  *\n  *   async presentLoadingA()\n  *\n  *   Retorna:         Nada\n  *\n  *   Proposito:       Permite mostrar un dialogo en patalla mientras que se realiza\n  *                    otro proceso. \n  *\n  *******************************************************************************/\n  async presentLoadingA() {\n    this.cargandoA = await this.loadingController.create({\n      message: 'Verificando los datos...',\n      duration: 10000\n    }); await this.cargandoA.present();\n  }\n\n}\n"],"sourceRoot":"webpack:///"}