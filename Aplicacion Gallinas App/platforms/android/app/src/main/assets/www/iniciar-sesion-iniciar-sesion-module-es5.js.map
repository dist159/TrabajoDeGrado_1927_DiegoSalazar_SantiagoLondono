{"version":3,"sources":["webpack:///src/app/iniciar-sesion/iniciar-sesion.page.html","webpack:///src/app/iniciar-sesion/iniciar-sesion-routing.module.ts","webpack:///src/app/iniciar-sesion/iniciar-sesion.module.ts","webpack:///src/app/iniciar-sesion/iniciar-sesion.page.scss","webpack:///src/app/iniciar-sesion/iniciar-sesion.page.ts"],"names":["routes","path","component","IniciarSesionPageRoutingModule","imports","forChild","exports","IniciarSesionPageModule","declarations","IniciarSesionPage","navCtrl","Servicios","loadingController","storage","account","email","password","presentLoadingA","userState","subscribe","user","iniciarsesion","then","res","cargandoA","dismiss","getUsuario","uid","UsuarioA","payload","val","console","log","undefined","admin","navigateRoot","set","err","create","message","duration","present","selector","template"],"mappings":"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","file":"iniciar-sesion-iniciar-sesion-module-es5.js","sourcesContent":["export default \"<ion-content>\\n\\n  <div  class=\\\"ion-text-center\\\" text-center style=\\\"margin-top: 20%;\\\">\\n    <h1 class=\\\"ion-text-center\\\"style=\\\"font-family: 'letra1'\\\">Gallinas App</h1>\\n    <img class=\\\"ion-text-center\\\" text-center style=\\\"margin-top: 10%; width: 200px; \\\" src=\\\"../../assets/imagenes/gallina.png\\\">\\n  </div>\\n  \\n  <form #form=\\\"ngForm\\\" >\\n    <ion-grid>\\n      <ion-row color=\\\"primary\\\" justify-content-center>\\n        <ion-col align-self-center size-md=\\\"6\\\" size-lg=\\\"5\\\" size-xs=\\\"12\\\">\\n          <div class=\\\"ion-text-center\\\">\\n            <h3>Iniciar sesión</h3>\\n          </div>\\n          <div padding>\\n            <ion-item>\\n              <ion-input name=\\\"email\\\" type=\\\"email\\\" placeholder=\\\"Tu correo\\\" ngModel required [(ngModel)]=\\\"account.email\\\" ></ion-input>\\n            </ion-item>\\n            <ion-item>\\n              <ion-input name=\\\"password\\\" type=\\\"password\\\" placeholder=\\\"Contraseña\\\" ngModel required [(ngModel)]=\\\"account.password\\\"></ion-input>\\n            </ion-item>\\n          </div>\\n          <div padding>\\n            <ion-button size=\\\"large\\\" type=\\\"submit\\\" (click)=\\\"iniciarSesion()\\\"[disabled]=\\\"form.invalid\\\" expand=\\\"block\\\">iniciar</ion-button>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </form>\\n  <div text-center>\\n  <ion-row text-center>\\n    <div  style=\\\"margin: auto;\\\"text-center>\\n      Si no tiene una cuenta, registrese  <a routerLink='/crear-ususario'>aca</a>.\\n    </div>\\n</ion-row>\\n</div>\\n\\n  \\n  \\n  </ion-content>\\n  \";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IniciarSesionPage } from './iniciar-sesion.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: IniciarSesionPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class IniciarSesionPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { IniciarSesionPageRoutingModule } from './iniciar-sesion-routing.module';\n\nimport { IniciarSesionPage } from './iniciar-sesion.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    IniciarSesionPageRoutingModule\n  ],\n  declarations: [IniciarSesionPage]\n})\nexport class IniciarSesionPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2luaWNpYXItc2VzaW9uL2luaWNpYXItc2VzaW9uLnBhZ2Uuc2NzcyJ9 */\";","/* iniciar-sesion.page ********************************************************/\n/*                                                                            */\n/*                   Pagina iniciar-sesion (funciones)                        */\n/*                                                                            */\n/******************************************************************************/\n\n/*******************************************************************************\n\n    Notas:           Codigo de las funciones de la pagina iniciar-sesion. Esta \n                     pagina permite iniciar sesion y navegar a otra pagina.\n                    \n\n    Registro de Revisiones:\n\n    FECHA      RESPONSABLE  REVISION\n    -----------------------------------------------------------------------\n    Mar 05/20  S.Londoño    Implementacion original\n\n    Mar 05/20  D.Salazar    Implementacion original\n\n\n*******************************************************************************/\n\nimport { Component, OnInit } from '@angular/core';\nimport { NavController, LoadingController } from '@ionic/angular';\n\nimport { Storage } from '@ionic/storage';\nimport { ServiciosGService, usuario } from '../servicios-g.service';\n\n@Component({\n  selector: 'app-iniciar-sesion',\n  templateUrl: './iniciar-sesion.page.html',\n  styleUrls: ['./iniciar-sesion.page.scss'],\n})\nexport class IniciarSesionPage implements OnInit {\n\n  cargandoA: any;\n  constructor(public navCtrl: NavController,\n    public Servicios: ServiciosGService, public loadingController: LoadingController, private storage: Storage) { }\n\n  /** Variables para leer el correo y la contrasena en el HTML */\n  account: { email: string, password: string } = {\n    email: '',\n    password: ''\n  };\n\n\n  ngOnInit() {\n  }\n\n  /*FN****************************************************************************\n  *\n  *   void iniciarSesion()\n  *\n  *   Retorna:         Nada\n  *\n  *   Proposito:       Dado un cuenta de correo y una contrasena, verifica en los\n  *                    servidores de google si se encuentra registrado y la informacion\n  *                    concuerda. En caso de un resultado positivo, se navegara\n  *                    a la pagina MainMenu. Tambien determinara si el usuario es\n  *                    administrador o usuario normal.\n  *\n  *******************************************************************************/\n  iniciarSesion() {\n    this.presentLoadingA();\n    this.Servicios.userState().subscribe((user: firebase.User) => {\n      this.Servicios.iniciarsesion(this.account.email, this.account.password).then(res => {\n        this.cargandoA.dismiss();\n        this.Servicios.getUsuario(user.uid).subscribe(res => {\n          const UsuarioA = res.payload.val() as usuario;\n          console.log(UsuarioA);\n          if (UsuarioA !== undefined) {\n            this.account.email=\"\";\n            this.account.password=\"\";\n            console.log(UsuarioA.admin)\n            if (UsuarioA.admin == true) {\n              this.navCtrl.navigateRoot('/admin');\n            } else {\n              this.navCtrl.navigateRoot('/mainmenu');\n            }\n          } else {\n            console.log(\"Error al iniciar\")\n          }\n        });\n        this.storage.set('log', 'si');\n      }).catch(err => {\n        this.cargandoA.dismiss();\n        console.log(\"Error al iniciar\")\n      });\n    });\n  }\n\n\n\n\n  /*FN****************************************************************************\n  *\n  *   async presentLoadingA()\n  *\n  *   Retorna:         Nada\n  *\n  *   Proposito:       Permite mostrar un dialogo en patalla mientras que se realiza\n  *                    otro proceso. \n  *\n  *******************************************************************************/\n  async presentLoadingA() {\n    this.cargandoA = await this.loadingController.create({\n      message: 'Verificando los datos...',\n      duration: 10000\n    }); await this.cargandoA.present();\n  }\n\n}\n"]}